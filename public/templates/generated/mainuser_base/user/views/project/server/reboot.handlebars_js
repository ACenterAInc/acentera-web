
function anonymous(Handlebars, depth0, helpers, partials, data) {
    this.compilerInfo = [4, ">= 1.0.0"];
    helpers = this.merge(helpers, Ember.Handlebars.helpers);
    data = data || {};
    var buffer = "", stack1, helper, options, escapeExpression = this.escapeExpression, helperMissing = helpers.helperMissing, self = this;
    function program1(depth0, data) {
        data.buffer.push("\n    <div class=\"col-lg-3\">\n        &nbsp;\n    </div>\n\n    <div class=\"col-lg-6\">\n\n        We apologize but someone have deleted this server.\n        <br/>\n        <br/>\n        <br/>\n\n    </div>\n\n");
    }
    function program3(depth0, data) {
        var buffer = "", stack1, helper, options;
        data.buffer.push("\n\n");
        stack1 = helpers["if"].call(depth0, "errorMsg", {hash:{}, hashTypes:{}, hashContexts:{}, inverse:self.program(6, program6, data), fn:self.program(4, program4, data), contexts:[depth0], types:["ID"], data:data});
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n\n");
        stack1 = (helper = helpers["if-equal"] || (depth0 && depth0["if-equal"]), options = {hash:{"param1":("content.status"), "param2":("off")}, hashTypes:{"param1":"ID", "param2":"STRING"}, hashContexts:{"param1":depth0, "param2":depth0}, inverse:self.noop, fn:self.program(8, program8, data), contexts:[], types:[], data:data}, helper ? helper.call(depth0, options) : helperMissing.call(depth0, "if-equal", options));
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n\n\n");
        stack1 = (helper = helpers["else-equal"] || (depth0 && depth0["else-equal"]), options = {hash:{"param1":("content.status"), "param2":("off")}, hashTypes:{"param1":"ID", "param2":"STRING"}, hashContexts:{"param1":depth0, "param2":depth0}, inverse:self.noop, fn:self.program(10, program10, data), contexts:[], types:[], data:data}, helper ? helper.call(depth0, options) : helperMissing.call(depth0, "else-equal", options));
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n\n");
        return buffer;
    }
    function program4(depth0, data) {
        var buffer = "", stack1, helper, options;
        data.buffer.push("\n    <div class=\"col-lg-2\">\n    </div>\n    <div class=\"alert alert-danger col-lg-8\">\n        <button type=\"button\" ");
        data.buffer.push(escapeExpression(helpers.action.call(depth0, "clear", "controller", "errorMsg", {hash:{}, hashTypes:{}, hashContexts:{}, contexts:[depth0, depth0, depth0], types:["ID", "ID", "STRING"], data:data})));
        data.buffer.push(" class=\"close\">\xd7</button>\n        <strong> ");
        data.buffer.push(escapeExpression((helper = helpers.i18n || (depth0 && depth0.i18n), options = {hash:{}, hashTypes:{}, hashContexts:{}, contexts:[depth0], types:["STRING"], data:data}, helper ? helper.call(depth0, "error_alert_prefix", options) : helperMissing.call(depth0, "i18n", "error_alert_prefix", options))));
        data.buffer.push("&nbsp;&nbsp;</strong>");
        stack1 = helpers._triageMustache.call(depth0, "errorMsg", {hash:{}, hashTypes:{}, hashContexts:{}, contexts:[depth0], types:["ID"], data:data});
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n    </div>\n");
        return buffer;
    }
    function program6(depth0, data) {
        data.buffer.push("\n    <div class=\"alert\">&nbsp;</div>\n");
    }
    function program8(depth0, data) {
        var buffer = "";
        data.buffer.push("\n    <div class=\"col-lg-3\">\n        &nbsp;\n    </div>\n\n    <div class=\"col-lg-6\">\n\n        Your server is currently offline.\n        <br/>\n        <br/>\n        <br/>\n        This will power on your server.\n        <br/>\n\n        <div class=\"form-group mediumtopmargin\">\n            <label class=\"control-label col-lg-4\">Password</label>\n\n            <div class=\"col-lg-8\">\n                ");
        data.buffer.push(escapeExpression(helpers.view.call(depth0, "App.NotEmptyTextField", {hash:{"type":("password"), "isValidOnFocusOutCallbackBinding":("errorMsg"), "valueBinding":("password"), "placeholder":("Enter your password to confirm."), "class":("passwordTextField"), "elementId":("password")}, hashTypes:{"type":"STRING", "isValidOnFocusOutCallbackBinding":"STRING", "valueBinding":"STRING", "placeholder":"STRING", "class":"STRING", "elementId":"STRING"}, hashContexts:{"type":depth0, "isValidOnFocusOutCallbackBinding":depth0, "valueBinding":depth0, "placeholder":depth0, "class":depth0, "elementId":depth0}, contexts:[depth0], types:["ID"], data:data})));
        data.buffer.push("\n            </div>\n            <br/>\n        </div>\n\n        <a ");
        data.buffer.push(escapeExpression(helpers.action.call(depth0, "powerOn", {hash:{}, hashTypes:{}, hashContexts:{}, contexts:[depth0], types:["ID"], data:data})));
        data.buffer.push(" class=\"mediumtopmargin btn btn-primary btn-lg\" style=\"float:right\" >Power On</a>\n\n    </div>\n\n");
        return buffer;
    }
    function program10(depth0, data) {
        var buffer = "", stack1;
        data.buffer.push("\n\n    <div class=\"col-lg-3\">\n        &nbsp;\n    </div>\n\n    <div class=\"col-lg-6\">\n\n        Your server is currently powered on.\n        <br/>\n        <br/>\n        <br/>\n        ");
        stack1 = helpers["if"].call(depth0, "type", {hash:{}, hashTypes:{}, hashContexts:{}, inverse:self.program(13, program13, data), fn:self.program(11, program11, data), contexts:[depth0], types:["ID"], data:data});
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n        <br/>\n        <p>We recommend rebooting your droplet through the command line, as this action is the same as hard resetting the server and may cause data corruption.</p>\n        <br/>\n        Do you wish to proceed?\n        <br/>\n\n        ");
        stack1 = helpers._triageMustache.call(depth0, "passwordconfirm-view", {hash:{}, hashTypes:{}, hashContexts:{}, contexts:[depth0], types:["ID"], data:data});
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n\n        <div class=\"row\" style=\"float:right\">\n            ");
        stack1 = helpers["if"].call(depth0, "type", {hash:{}, hashTypes:{}, hashContexts:{}, inverse:self.program(17, program17, data), fn:self.program(15, program15, data), contexts:[depth0], types:["ID"], data:data});
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n\n            <a ");
        data.buffer.push(escapeExpression(helpers.action.call(depth0, "reboot", {hash:{}, hashTypes:{}, hashContexts:{}, contexts:[depth0], types:["ID"], data:data})));
        data.buffer.push(" class=\"leftmargin mediumtopmargin btn btn-default btn-lg\" style=\"float:right\" >Reboot</a>\n        </div>\n\n    </div>\n\n");
        return buffer;
    }
    function program11(depth0, data) {
        data.buffer.push("\n            <p>This will force a hard reboot of your server.</p>\n            <div class=\"alert alert-danger\">\n                You should only use this as last resort as it could cause data corruptions.\n            </div>\n        ");
    }
    function program13(depth0, data) {
        data.buffer.push("\n            <p>This will power off your server.</p>\n        ");
    }
    function program15(depth0, data) {
        var buffer = "";
        data.buffer.push("\n                \n            ");
        return buffer;
    }
    function program17(depth0, data) {
        var buffer = "";
        data.buffer.push("\n                <a ");
        data.buffer.push(escapeExpression(helpers.action.call(depth0, "powerOff", {hash:{}, hashTypes:{}, hashContexts:{}, contexts:[depth0], types:["ID"], data:data})));
        data.buffer.push(" class=\"mediumtopmargin btn btn-primary btn-lg\" style=\"float:left\" >Power Off</a>\n            ");
        return buffer;
    }
    data.buffer.push("\n\n<br/>\n");
    stack1 = (helper = helpers["if-equal"] || (depth0 && depth0["if-equal"]), options = {hash:{"param1":("archive"), "param2":("content.status")}, hashTypes:{"param1":"STRING", "param2":"ID"}, hashContexts:{"param1":depth0, "param2":depth0}, inverse:self.noop, fn:self.program(1, program1, data), contexts:[], types:[], data:data}, helper ? helper.call(depth0, options) : helperMissing.call(depth0, "if-equal", options));
    if (stack1 || stack1 === 0) {
        data.buffer.push(stack1);
    }
    data.buffer.push("\n\n");
    stack1 = (helper = helpers["else-equal"] || (depth0 && depth0["else-equal"]), options = {hash:{"param1":("archive"), "param2":("content.status")}, hashTypes:{"param1":"STRING", "param2":"ID"}, hashContexts:{"param1":depth0, "param2":depth0}, inverse:self.noop, fn:self.program(3, program3, data), contexts:[], types:[], data:data}, helper ? helper.call(depth0, options) : helperMissing.call(depth0, "else-equal", options));
    if (stack1 || stack1 === 0) {
        data.buffer.push(stack1);
    }
    data.buffer.push("\n");
    return buffer;
}
