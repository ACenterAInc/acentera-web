
function anonymous(Handlebars, depth0, helpers, partials, data) {
    this.compilerInfo = [4, ">= 1.0.0"];
    helpers = this.merge(helpers, Ember.Handlebars.helpers);
    data = data || {};
    var buffer = "", stack1, helper, options, helperMissing = helpers.helperMissing, escapeExpression = this.escapeExpression, self = this;
    function program1(depth0, data) {
        data.buffer.push("\n\n    <div class=\"row col-lg-12 text-center mediumtopmargin\">\n        All tasks are completed, you will be redirected shortly.<br/>\n        <br/>\n        <br/>\n\n    </div>\n\n");
    }
    function program3(depth0, data) {
        var buffer = "", stack1, helper, options;
        data.buffer.push("\n\n    ");
        stack1 = (helper = helpers["else-equal"] || (depth0 && depth0["else-equal"]), options = {hash:{"param1":("error"), "param2":("content.action_status")}, hashTypes:{"param1":"STRING", "param2":"ID"}, hashContexts:{"param1":depth0, "param2":depth0}, inverse:self.noop, fn:self.program(4, program4, data), contexts:[], types:[], data:data}, helper ? helper.call(depth0, options) : helperMissing.call(depth0, "else-equal", options));
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n\n    ");
        stack1 = (helper = helpers["if-equal"] || (depth0 && depth0["if-equal"]), options = {hash:{"param1":("error"), "param2":("content.action_status")}, hashTypes:{"param1":"STRING", "param2":"ID"}, hashContexts:{"param1":depth0, "param2":depth0}, inverse:self.noop, fn:self.program(6, program6, data), contexts:[], types:[], data:data}, helper ? helper.call(depth0, options) : helperMissing.call(depth0, "if-equal", options));
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n");
        return buffer;
    }
    function program4(depth0, data) {
        var buffer = "", helper, options;
        data.buffer.push("\n        <div id='status' class=\"row col-lg-12 text-center mediumtopmargin\">\n\n                <div class=\"row col-lg-12 text-center\">\n                    Please stand by while the process completes, <br/>\n                    <br/>you may close the window at any time the process will still complete.\n                    <br/>\n                    <br/>\n\n                </div>\n\n                <div id=\"statusready\" class=\"row col-lg-12\">\n                    <div class=\"progress progress-striped\">\n                        \n                        <div id=\"progressBar\" class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" ");
        data.buffer.push(escapeExpression((helper = helpers.bindStyle || (depth0 && depth0.bindStyle), options = {hash:{"width":("current_percentage"), "width-unit":("%")}, hashTypes:{"width":"ID", "width-unit":"STRING"}, hashContexts:{"width":depth0, "width-unit":depth0}, contexts:[], types:[], data:data}, helper ? helper.call(depth0, options) : helperMissing.call(depth0, "bindStyle", options))));
        data.buffer.push(">\n                        </div>\n                    </div>\n\n                    <div id=\"timer01\" style=\"text-align:center\">\n                    </div>\n                </div>\n        </div>\n    ");
        return buffer;
    }
    function program6(depth0, data) {
        var buffer = "", stack1;
        data.buffer.push("\n        <div id='statuserror' class=\"row col-lg-12 mediumtopmargin\">\n\n            <div class=\"row col-lg-12 text-center\">\n                Sorry, the operation have failed...\n                <br/>\n                <br/>\n                <br/>\n\n                ");
        stack1 = helpers["if"].call(depth0, "showErrorGoBackButton", {hash:{}, hashTypes:{}, hashContexts:{}, inverse:self.noop, fn:self.program(7, program7, data), contexts:[depth0], types:["ID"], data:data});
        if (stack1 || stack1 === 0) {
            data.buffer.push(stack1);
        }
        data.buffer.push("\n            </div>\n        </div>\n    ");
        return buffer;
    }
    function program7(depth0, data) {
        var buffer = "";
        data.buffer.push("\n                    <a ");
        data.buffer.push(escapeExpression(helpers.action.call(depth0, "taskErrorGoBackClick", {hash:{}, hashTypes:{}, hashContexts:{}, contexts:[depth0], types:["ID"], data:data})));
        data.buffer.push(" class=\"btn btn-primary btn-lg\">\n                        Go Back.\n                    </a>\n                ");
        return buffer;
    }
    stack1 = (helper = helpers["if-equal"] || (depth0 && depth0["if-equal"]), options = {hash:{"param1":("100"), "param2":("current_percentage")}, hashTypes:{"param1":"STRING", "param2":"ID"}, hashContexts:{"param1":depth0, "param2":depth0}, inverse:self.noop, fn:self.program(1, program1, data), contexts:[], types:[], data:data}, helper ? helper.call(depth0, options) : helperMissing.call(depth0, "if-equal", options));
    if (stack1 || stack1 === 0) {
        data.buffer.push(stack1);
    }
    data.buffer.push("\n\n");
    stack1 = (helper = helpers["else-equal"] || (depth0 && depth0["else-equal"]), options = {hash:{"param1":(100), "param2":("current_percentage")}, hashTypes:{"param1":"INTEGER", "param2":"ID"}, hashContexts:{"param1":depth0, "param2":depth0}, inverse:self.noop, fn:self.program(3, program3, data), contexts:[], types:[], data:data}, helper ? helper.call(depth0, options) : helperMissing.call(depth0, "else-equal", options));
    if (stack1 || stack1 === 0) {
        data.buffer.push(stack1);
    }
    return buffer;
}
