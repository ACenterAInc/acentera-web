
function anonymous(Handlebars, depth0, helpers, partials, data) {
    this.compilerInfo = [4, ">= 1.0.0"];
    helpers = this.merge(helpers, Ember.Handlebars.helpers);
    data = data || {};
    var buffer = "", stack1, helper, options, escapeExpression = this.escapeExpression, self = this, helperMissing = helpers.helperMissing;
    function program1(depth0, data) {
        var buffer = "";
        data.buffer.push("\n        <a ");
        data.buffer.push(escapeExpression(helpers["bind-attr"].call(depth0, {hash:{"href":("view.href")}, hashTypes:{"href":"STRING"}, hashContexts:{"href":depth0}, contexts:[], types:[], data:data})));
        data.buffer.push("><i class=\"\"></i>Projects</a>\n    ");
        return buffer;
    }
    function program3(depth0, data) {
        var buffer = "";
        data.buffer.push("\n        <a ");
        data.buffer.push(escapeExpression(helpers["bind-attr"].call(depth0, {hash:{"href":("view.href")}, hashTypes:{"href":"STRING"}, hashContexts:{"href":depth0}, contexts:[], types:[], data:data})));
        data.buffer.push("><i class=\"\"></i>Account</a>\n    ");
        return buffer;
    }
    data.buffer.push("<div id=\"menu\">\n\n\n    ");
    stack1 = (helper = helpers["link-to"] || (depth0 && depth0["link-to"]), options = {hash:{"tagName":("li")}, hashTypes:{"tagName":"STRING"}, hashContexts:{"tagName":depth0}, inverse:self.noop, fn:self.program(1, program1, data), contexts:[depth0], types:["STRING"], data:data}, helper ? helper.call(depth0, "main.index", options) : helperMissing.call(depth0, "link-to", "main.index", options));
    if (stack1 || stack1 === 0) {
        data.buffer.push(stack1);
    }
    data.buffer.push("\n\n\n\n    ");
    stack1 = (helper = helpers["link-to"] || (depth0 && depth0["link-to"]), options = {hash:{"tagName":("li")}, hashTypes:{"tagName":"STRING"}, hashContexts:{"tagName":depth0}, inverse:self.noop, fn:self.program(3, program3, data), contexts:[depth0], types:["STRING"], data:data}, helper ? helper.call(depth0, "main.account", options) : helperMissing.call(depth0, "link-to", "main.account", options));
    if (stack1 || stack1 === 0) {
        data.buffer.push(stack1);
    }
    data.buffer.push("\n\n</div>");
    return buffer;
}
