# Configuration
application.name=ACenterA
application.env=dev
application.mode=dev



# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="E27D^[_<Lpt0vjad]de;3/i;tx3gpRmG4Byof/3nahO/dIo9gbsMWut1w3xg[>9W"

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.

# By convention, the default datasource is named `default`
#db.default.driver=com.mysql.jdbc.Driver

#db.default.driver=org.h2.Driver
#db.default.url="jdbc:h2:~/acentera.db;MODE=MYSQL;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE;AUTO_RECONNECT=TRUE;MVCC=TRUE"

db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://localhost:3306/app?autoReconnect=true&createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8&profileSQL=false"
db.default.user="root"
db.default.password=""

ebean.default="models.disabled.*"

# required higher lenght
parsers.text.maxLength=512K
parsers.formUrlEncoded.maxLength=4096K


# Set a connection's default isolation level
db.default.isolation=READ_COMMITTED

# In order to reduce lock contention and thus improve performance,
# each incoming connection request picks off a connection from a
# pool that has thread-affinity.
# The higher this number, the better your performance will be for the
# case when you have plenty of short-lived threads.
# Beyond a certain threshold, maintenance of these pools will start
# to have a negative effect on performance (and only for the case
# when connections on a partition start running out).
db.default.partitionCount=3

# The number of connections to create per partition. Setting this to
# 5 with 3 partitions means you will have 15 unique connections to the
# database. Note that BoneCP will not create all these connections in
# one go but rather start off with minConnectionsPerPartition and
# gradually increase connections as required.
db.default.maxConnectionsPerPartition=10


# The number of initial connections, per partition.
db.default.minConnectionsPerPartition=5

# When the available connections are about to run out, BoneCP will
# dynamically create new ones in batches. This property controls
# how many new connections to create in one go (up to a maximum of
# maxConnectionsPerPartition). Note: This is a per-partition setting.
db.default.acquireIncrement=1

# After attempting to acquire a connection and failing, try to
# connect this number of times before giving up.
db.default.acquireRetryAttempts=10

# How long to wait before attempting to obtain a
# connection again after a failure.
db.default.acquireRetryDelay=5 seconds



# Idle max age
db.default.idleMaxAge=200 seconds

db.default.timeout=10 seconds


# An initial SQL statement that is run only when
# a connection is first created.
db.default.initSQL="SELECT 1"

# If enabled, log SQL statements being executed.
db.default.logStatements=false



db.default.idleMaxAge=10 minutes

# This sets the time for a connection to remain idle before sending a test query to the DB.
# This is useful to prevent a DB from timing out connections on its end.


# The maximum time to wait before a call
# to getConnection is timed out.
db.default.connectionTimeout=20 seconds

# The maximum connection age.
#db.default.maxConnectionAge=15 minutes
db.default.maxConnectionAge=30 minutes


db.default.testOnBorrow=true
db.default.validationQuery="SELECT 1"


db.default.connectionTestStatement = "select 1"


db.default.idleMaxAge=10 minutes
db.default.idleConnectionTestPeriod=35 seconds
db.default.connectionTestStatement="SELECT 1"
#db.default.maxConnectionAge=30 minutes

#DB_CLOSE_ON_EXIT=FALSE
#test.db=mem
#test.db.url="jdbc:h2:mem:default;MODE=MYSQL;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE"
#test.db.url="jdbc:h2:mem:default;MODE=MYSQL;LOCK_MODE=0;DB_CLOSE_ON_EXIT=FALSE"

#evolution.plugin=false
#evolutions.enabled=false
applyEvolutions.default=false
##default.applyevolutions=false;


#play.params="-DapplyEvolutions.default=false"
#params="-DapplyEvolutions.default=false"

#java.source=1.6

application.session.sendOnlyIfChanged=true
http.userAgent=ACenterA 1.0

#db.default.jndiName="default"
#jdbc:h2:mem:default"

#jpa.default="default"
#;MODE=MYSQL;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE;AUTO_RECONNECT=TRUE"



#hibernate
# db.default.driver=org.postgresql.Driver
# db.default.url="jdbc:postgresql://localhost:5432/todo"
# db.default.user=todo
# db.default.password=secretpassword


#jpa.ddl=none
#jpa.ddl=default
#jpa.debugSQL=default

#ebean.default="disabled.models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger=DEBUG

# Logger used by the framework:
logger.play=DEBUG

# Logger provided to your application:
logger.application=DEBUG



recaptcha.publicKey="enter_public_key_here"
recaptcha.publickey="enter_public_key_here"
recaptcha.privatekey="enter_private_key_here"
recaptcha.privateKey="enter_private_key_here"


smtp.host=""
smtp.port=2525
#smtp.ssl="no"
#smtp.tls="no"
smtp.user="enter_smtp_user_here"
smtp.password="enter_smtp_password_here"


mail.smtp.host=""
mail.smtp.user="enter_smtp_user_here"
mail.smtp.pass="enter_smtp_password_here"
#mail.smtp.channel=
mail.smtp.port=2525

mail.host=""
mail.user="enter_smtp_user_here"
mail.pass="enter_smtp_password_here"
#mail.channel=
mail.port=2525


application.langs="en"
privatekey="This is a s3cret private key, make sure to change it"


memcached=enabled
ehcacheplugin=disabled
memcached.host="localhost:11211"
